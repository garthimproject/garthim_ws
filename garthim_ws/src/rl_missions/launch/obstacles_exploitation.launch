<launch>

    <arg name="robot_pose_x" default="0"/>
    <arg name="robot_pose_y" default="-0.352357"/>
    <arg name="robot_pose_yaw" default="0"/>
    <include file="$(find rl_missions)/launch/core/rl_gazebo.launch">
        <arg name="robot_pose_x" value="$(arg robot_pose_x)"/>
        <arg name="robot_pose_y" value="$(arg robot_pose_y)"/>
        <arg name="robot_pose_yaw" value="$(arg robot_pose_yaw)"/>
        <arg name="world_name" value="$(find crumb_gazebo)/worlds/small_25_wall_hope.world" />
    </include>
    <rosparam param="actions_enabled">
        [0,2,3]
    </rosparam>
    <arg name="robot_model_name" default="turtlebot"/>
    <param name="robot_model_name" value="$(arg robot_model_name)"/>
    <include file="$(find rl_missions)/launch/core/rl_navigation.launch">
        <arg name="obstacles" value="true"/>
        <arg name="initial_radius_target" value="1.25"/>
        <arg name="threshold_scaffolding" value="2.0"/>
        <arg name="robot_pose_x" value="$(arg robot_pose_x)"/>
        <arg name="robot_pose_y" value="$(arg robot_pose_y)"/>
        <arg name="robot_pose_yaw" value="$(arg robot_pose_yaw)"/>
        <arg name="time_actions" value="[1.00]"/>
        <arg name="scanner_depth_levels" value="3"/>
        <arg name="scanner_orientation_levels" value="3"/>
        <arg name="respawn" value="true" />
    </include>
    <param name="exploitation" value="true" />
    <include file="$(find rl_missions)/launch/core/rl_nodes.launch">
        <arg name="decider_implementation" value="decider::DeciderMaxPolicy" />
        <arg name="is_dle_set_decider_exploitation" value="true" />
        <arg name="decider_queue_states" value="DLEQueueStatesExploitation" />
        <arg name="decider_queue_rewards" value="DLEQueueRewardsExploitation" />
        <arg name="decider_steps_temperature" value="DLEStepsTemperatureExploitation" />
        <arg name="decider_Qs" value="DLEQSExploitation" />
        <arg name="reward_value_for_collision" value="-100"/>
        <arg name="read_initial_table" value="true"/>
        <arg name="repeat_distance_states_for_scanner_states" value="false"/>
        <arg name="reward_function" value="reward::RewardNextStateScannerFunction"/>
        <arg name="max_episodes" value="200"/>
        <arg name="filename_recordtab" value="RecordTabExploitation"/>
        <arg name="filename_endepisode" value="EpisodeCompletationExploitation"/>
        <arg name="respawn" value="true" />
  	<arg name="filename_initial_critic" value="policies/QIni" /> 

	 </include>
    <param name="total_experiments" value="100"/>
</launch>
